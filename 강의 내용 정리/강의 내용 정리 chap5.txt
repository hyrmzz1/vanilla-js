CLOCK

#5.0
기능별로 js 파일 생성 후 html에서 다 import 하는 방식으로 코드 작성해보자. <- CSS 파일 생성할 때처럼!

intervals ; 매번 일어나야 하는 것. ex)매 2초마다오전 12:05 2022-12-05 반복실행
-> setInterval(호출할 함수명, 몇초마다 발생시킬지(ms단위)); 사용.
ex) setInterval(sayHello, 5000);
// 시작 5초 후부터 sayHello 함수 5초마다 발생.
// 위에 function sayHello(){}; 코드로 함수 정의되어 있어야 함.

#5.1
timeouts ; 딱 한번만 실행시킴.

그냥 functionName(); 코드는 즉시 이 함수를 실행시킴.
일정 시간 후에 실행시키고 싶다면? timeout!

setTimeout(sayHello, 5000); //5000ms 즉 5초 후에 sayHello 함수 실행시킴

*Date Object	//현재 시, 분, 초, 연도, 요일 등을 나타낸다.
Date()	// 오늘 날짜 반환

const date = new Date();
date.getDate();	//일
date.getDay();	//요일. 0(sun)~6(sat)
date.getHours();	//시
date.getMinutes();	//분
date.getSeconds();	//초

interval은 지정한 시간 후부터 반복적으로 발생하므로, 처음부터 발생시키고 싶다면 interval위에 함수 funcName(); 작성해주기.
function getClock(){
	const date = new Date();	//date 라는 변수는 오늘 날짜를 반환한다.
	console.log(`${date.getHours}:${date.getMinutes}:${date.getSeconds}`);	
	// ``는 쉬프트 안누른 상태로 ~ 키 누른 것. 따옴표아니고 "백틱"이라 한다.
	// 문자열 작성시 변수 사용해야 할 때 + 로 연결하지 않고 백틱과 달러 사용해 작성할 수 있다.
}

getClock();	//이거 없으면 실행하자마자의 현재시간 안뜨고 1초 후부터 뜸.
setInterval(getClock, 1000);	//매초 실행되기 때문에, 실시간으로 현재 시-분-초가 콘솔에 표시된다!

사이트에 있는 h2 같은 (00:00:00이라 써있던) 텍스트에 시간 표시하고 싶다면?
clock.innerText = `${date.getHours}:${date.getMinutes}:${date.getSeconds}`;
//단, clock은 위에서 const로 정의되고, 쿼리셀렉터로 h2 할당된 변수여야 함.

#5.2
string을 문자 두개로 채워보자.
19시 1분 1초를 19:1:1 이 아닌, 19:01:01 로 나타나게 해보자!
//JS가 최소 2개의 문자를 갖도록.

padStart() //string에 쓸 수 있는 함수.
padStart(maxLength, fillString);
// maxLength보다 string이 작으면, fillString에 적힌 문자로 앞을 채움.

"1".padStart(2, 0);		//01
"23".padStart(2, 0);		//23
"hello".padStart(8, "x");	//xxxhello

data.getHours() 에는 padStart() 사용할 수 없음.
padStart()는 string에 쓰는 함수인데, data.getHours() 결과값은 number이기 때문.
따라서 number를 string으로 변환해줘야함. =>String() 으로 감싸기
const date = new Date();
const hours = String(date.getHours()).padStart(2, "0");
hours, minutes, seconds 를 clock.innertext 에 넣어준다.

#5.3 recap
"1".padStart(3, "0");	//001
"1".padEnd(3, "0");		//100

new className();	// 클래스로부터 객체를 생성하는 방법. 
// 객체 생성없이 바로 함수 호출하려면 static으로 정의되어 있어야만 가능.